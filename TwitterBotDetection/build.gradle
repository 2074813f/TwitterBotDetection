/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Adam' at '11/9/16 8:30 PM' with Gradle 3.0
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.0/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'application'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
version = '1.0'

mainClassName = 'tbd.TwitterBotDetection'

//Disable distZip/distTar task to speed up build/save resources.
distZip.enabled = false
distTar.enabled = false

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
	compile fileTree(include: ['*.jar'], dir: 'libs')

    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    
	// https://mvnrepository.com/artifact/org.twitter4j/twitter4j
	compile group: 'org.twitter4j', name: 'twitter4j-core', version: '4.0.6'
	
  	compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.7'
  	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.7'
  	
  	compile 'biz.paluch.redis:lettuce:4.3.0.Final'
  	
  	compile group: 'org.apache.spark', name: 'spark-mllib_2.10', version: '2.0.2'
  	
	compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.2'
	
	compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-grizzly2-http', version: '2.25'
	compile group: 'org.glassfish.jersey.test-framework.providers', name: 'jersey-test-framework-provider-grizzly2', version: '2.25'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

//Configure "run" task to take arguments via System property.
run {
    /* Need to split the space-delimited value in the property*/
    if (project.hasProperty('cliargs')) {
        args(cliargs)
    }
}

sourceSets {
    main {
        resources {
            srcDirs "src/main/resources"
        }
    }
}

jar {
	manifest {
            attributes(
                'Implementation-Title': 'TwitterBotDetection',
		'Implementation-Version': version,
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': mainClassName
            )
	}
}
